<?xml version="1.0" encoding="UTF-8"?>

<!--
 *
 * This help file was generated from MCreateMosaicShape.sci using help_from_sci().
 *
 -->

<refentry version="5.0-subset Scilab" xml:id="MCreateMosaicShape" xml:lang="en"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:ns3="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:scilab="http://www.scilab.org"
          xmlns:db="http://docbook.org/ns/docbook">

  <refnamediv>
    <refname>MCreateMosaicShape</refname>
    <refpurpose>Create a mosaic image shape.</refpurpose>
  </refnamediv>


<refsynopsisdiv>
   <title>Calling Sequence</title>
   <synopsis>
   shape = MCreateMosaicShape(data, data_type)
   shape = MCreateMosaicShape(data, data_type, method, options)
   
   </synopsis>
</refsynopsisdiv>

<refsection>
   <title>Parameters</title>
   <variablelist>
   <varlistentry><term>data:</term>
      <listitem><para> Input image which shape needs to be created.</para></listitem></varlistentry>
   <varlistentry><term>data_type:</term>
      <listitem><para> Input image type: "grayscale" (or simply "gray") or "color" (only "grayscale" is now implemented).</para></listitem></varlistentry>
   <varlistentry><term>method:</term>
      <listitem><para> Name of the method that shall be used to create the input image shape.</para></listitem></varlistentry>
   <varlistentry><term>options:</term>
      <listitem><para> Parameters of the specified method.</para></listitem></varlistentry>
   <varlistentry><term>shape:</term>
      <listitem><para> Structure representing the input image shape.</para></listitem></varlistentry>
   </variablelist>
</refsection>

<refsection>
   <title>Description</title>
   <para>
<link linkend="MCreateMosaicShape">MCreateMosaicShape()</link> returns a structure
representing the shape of the given image.
   </para>
   <para>
If data_type is "grayscale" (or simply "gray"), the shape is a subspace of piecewise
constant images that regions of constant brightness are defined based on the input one.
In this case the possible values for method are: "exact" (default value), "quantize", "k-means".
   </para>
   <para>
▶ "exact" means that the regions of constant brightness are exactly the same
as those of the input image.
   </para>
   <para>
▶ "quantize" means that the regions of constant brightness
are found using simple quantization performed with <link linkend="MQuantize">MQuantize()</link>.
In this case options must be a structure with the field "levels" — a vector
of quantization levels.
   </para>
   <para>
▶ "k-means" means that the regions of constant brightness
are found using k-means clustering algorithm. In this case quantization levels are
calculated using heuristics implemented in <link linkend="nan_kmeans">nan_kmeans()</link>,
and options must be a structure with the field "number_of_regions" — required number of regions.
   </para>
   <para>
</para>
</refsection>

<refsection>
   <title>Examples</title>
   <programlisting role="example"><![CDATA[
// Exact
imgfile = fullpath(MorIARTyPath() + "/images/cube/cube-1.png");
cube = im2double(imread(imgfile));
cube = cube(:, :, 1);
shape1 = MCreateMosaicShape(cube, "grayscale");

// Quantize
imgfile = fullpath(MorIARTyPath() + "/images/camera/petrozavodsk-marx_avenue-1.png");
img = im2double(imread(imgfile));
img = img(:, :, 1);
levels = linspace(min(img), max(img), 11);
levels = levels(2 : $ - 1);
shape2 = MCreateMosaicShape(img, "grayscale", "quantize", struct("levels", levels));

// K-means
shape3 = MCreateMosaicShape(img, "grayscale", "k-means", struct("number_of_regions", 10));

   ]]></programlisting>
</refsection>

<refsection>
   <title>See also</title>
   <simplelist type="inline">
   <member><link linkend="MCreateProjection">MCreateProjection</link></member>
   <member><link linkend="MQuantize">MQuantize</link></member>
   <member><link linkend="nan_kmeans">nan_kmeans</link></member>
   </simplelist>
</refsection>

<refsection>
   <title>Authors</title>
   <simplelist type="vert">
   <member>Andrey Zubyuk</member>
   </simplelist>
</refsection>
</refentry>
